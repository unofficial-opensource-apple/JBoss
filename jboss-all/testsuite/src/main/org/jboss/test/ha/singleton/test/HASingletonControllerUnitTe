/* 
 * ====================================================================
 * This is Open Source Software, distributed
 * under the Apache Software License, Version 1.1
 * 
 * 
 *  This software  consists of voluntary contributions made  by many individuals
 *  on  behalf of the Apache Software  Foundation and was  originally created by
 *  Ivelin Ivanov <ivelin@apache.org>. For more  information on the Apache
 *  Software Foundation, please see <http://www.apache.org/>.
 */

package org.jboss.test.ha.singleton.test;

import java.security.InvalidParameterException;

import junit.framework.TestCase;

import org.jboss.test.ha.singleton.HASingletonControllerTester;

/**
 * 
 * @author  Ivelin Ivanov <ivelin@apache.org>
 *
 */
public class HASingletonControllerUnitTestCase extends TestCase
{

  private HASingletonControllerTester singletonControllerTester = null;

  public HASingletonControllerUnitTestCase(String name)
  {
    super(name);
  }
  
  public void setUp()
  {
    singletonControllerTester = new HASingletonControllerTester();
  }

  
  public void tearDown() 
  {
    singletonControllerTester = null;
  }
  
  public void testSetValidTargetName()
  {
    String someSingletonService = "jboss:service=HASingletonMBeanExample";
    singletonControllerTester.setTargetName( someSingletonService );
    
    assertEquals("setTargetName() failed", singletonControllerTester.getTargetName(), someSingletonService );
  }

  public void testSetInvalidTargetName()
  {
    String someSingletonService = "some:garbage";
    
    try
    {
      singletonControllerTester.setTargetName( someSingletonService );
      fail("expected to throw InvalidParameterException");
    }
    catch (InvalidParameterException ipe)
    {
      // that's right
    }
    
    someSingletonService = null;
    try
    {
      singletonControllerTester.setTargetName( someSingletonService );
      fail("expected to throw InvalidParameterException");
    }
    catch (InvalidParameterException ipe)
    {
      // that's right
    }
  }

  public void testSetTargetStartMethod()
  {
    String someMethod = "startTheSingleton";
    singletonControllerTester.setTargetStartMethod( someMethod );
    
    assertEquals("setTargetStartMethod() failed", singletonControllerTester.getTargetStartMethod(), someMethod );
  }


  public void testSetNullOrBlankStartTargetName()
  {
    String someMethod = "";
    singletonControllerTester.setTargetStartMethod( someMethod );
    
    assertEquals("setTargetStartMethod() failed to set default value", singletonControllerTester.getTargetStartMethod(), "startSingleton" );

    someMethod = null;
    singletonControllerTester.setTargetStartMethod( someMethod );
    
    assertEquals("setTargetStartMethod() failed to set default value", singletonControllerTester.getTargetStartMethod(), "startSingleton" );
  }


  public void testSetTargetStopMethod()
  {
    String someMethod = "stopTheSingleton";
    singletonControllerTester.setTargetStopMethod( someMethod );
    
    assertEquals("setTargetStartMethod() failed", singletonControllerTester.getTargetStopMethod(), someMethod );
  }


  public void testSetNullOrBlankStopTargetName()
  {
    String someMethod = "";
    singletonControllerTester.setTargetStopMethod( someMethod );
    
    assertEquals("setTargetStartMethod() failed to set default value", singletonControllerTester.getTargetStopMethod(), "stopSingleton" );

    someMethod = null;
    singletonControllerTester.setTargetStopMethod( someMethod );
    
    assertEquals("setTargetStartMethod() failed to set default value", singletonControllerTester.getTargetStopMethod(), "stopSingleton" );
  }


  public void testStartSingleton()
  {
    singletonControllerTester.setTargetName("jboss:service=HASingletonMBeanExample");
    singletonControllerTester.setTargetStartMethod("startTheSingleton");
    
    singletonControllerTester.startSingleton();
    
    assertEquals("method not invoked as expected",
      singletonControllerTester.__invokationStack__.pop(), "invokeMBeanMethod:jboss:service=HASingletonMBeanExample.startTheSingleton");      
  }
  
  public void testStopSingleton()
  {
    singletonControllerTester.setTargetName("jboss:service=HASingletonMBeanExample");
    singletonControllerTester.setTargetStopMethod("stopTheSingleton");
    
    singletonControllerTester.stopSingleton();
    
    assertEquals("method not invoked as expected",
      singletonControllerTester.__invokationStack__.pop(), "invokeMBeanMethod:jboss:service=HASingletonMBeanExample.stopTheSingleton");      
  }
  
}
